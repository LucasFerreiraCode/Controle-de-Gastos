// app.js (refatorado com validação, exportação de dados e filtros)
document.addEventListener("DOMContentLoaded", function () {
    function showToast(type, customMessage = null) {
        const toastContainer = document.getElementById('toast-container');
        const toast = document.createElement('div');
        const isSuccess = type === 'success';
        toast.className = `flex items-center gap-4 px-4 py-3 rounded-2xl shadow-lg text-gray-900 bg-white border-l-4 ${isSuccess ? 'border-green-500' : 'border-red-500'}`;
        const imgSrc = isSuccess ? './img/Robo-correto.png' : './img/Robo-erro.png';
        const message = customMessage || (isSuccess ? 'Ação realizada com sucesso!' : 'Preencha todos os campos corretamente.');
        toast.innerHTML = `
            <img src="${imgSrc}" alt="status" class="h-12">
            <div class="flex flex-col">
                <strong class="text-lg">${message}</strong>
            </div>
        `;
        toastContainer.appendChild(toast);
        setTimeout(() => toast.remove(), 2500);
    }

    function clearCorruptedData() {
        try {
            JSON.parse(localStorage.getItem('expenses'));
        } catch (e) {
            localStorage.removeItem('expenses');
        }
    }

    clearCorruptedData();

    let expenses = JSON.parse(localStorage.getItem('expenses')) || [];
    let goal = parseFloat(localStorage.getItem('goal')) || 0;
    let income = parseFloat(localStorage.getItem('income')) || 0;
    let chart, chartDia;

    function saveAndRender() {
        try {
            localStorage.setItem('expenses', JSON.stringify(expenses));
            renderExpenses();
            updateDisplays();
            updateCharts();
            updateMonthlyChart();
        } catch (e) {
            console.error("Erro ao salvar dados:", e);
        }
    }

    function addExpense() {
        const amountInput = document.getElementById('amount');
        const dateInput = document.getElementById('date');
        const categoryInput = document.getElementById('category');

        const amount = parseFloat(amountInput.value);
        const date = dateInput.value;
        const category = categoryInput.value.trim();

        const validCategories = [
            "Aluguel", "Água/Luz", "Internet", "Streaming",
            "Compras para casa", "Cosméticos", "Pizza, lanches, doces",
            "Contas", "Gasolina", "Outros"
        ];

        const today = new Date().toISOString().split("T")[0];

        if (
            isNaN(amount) || amount <= 0 || amount > 100000 ||
            !date || new Date(date) > new Date(today) ||
            !validCategories.includes(category)
        ) {
            showToast('error');
            amountInput.focus();
            return;
        }

        expenses.push({ amount, date, category });
        saveAndRender();
        showToast('success', 'Gasto adicionado com sucesso!');

        amountInput.value = '';
        dateInput.value = today;
        categoryInput.value = 'Compras para casa';
        amountInput.focus();
    }

    function updateMeta() {
        const newGoal = parseFloat(document.getElementById('goal').value) || 0;
        const newIncome = parseFloat(document.getElementById('income').value) || 0;

        goal = newGoal;
        income = newIncome;

        localStorage.setItem('goal', goal);
        localStorage.setItem('income', income);
        updateDisplays();
    }

    function deleteExpense(index) {
        if (confirm("Tem certeza que deseja remover esta despesa?")) {
            expenses.splice(index, 1);
            saveAndRender();
            showToast('success', 'Gasto removido com sucesso!');
        }
    }

    function resetData() {
        if (confirm("Tem certeza que deseja limpar todos os dados? Esta ação não pode ser desfeita.")) {
            // Limpa as despesas
            expenses = [];
            goal = 0;
            income = 0;
            
            // Reseta os campos de meta e ganhos
            document.getElementById('goal').value = '';
            document.getElementById('income').value = '';
            
            // Reseta os campos de novo gasto
            document.getElementById('amount').value = '';
            document.getElementById('date').value = new Date().toISOString().split('T')[0];
            document.getElementById('category').value = 'Compras para casa';
            
            // Limpa os filtros
            document.getElementById('filter-start').value = '';
            document.getElementById('filter-end').value = '';
            document.getElementById('filter-category').value = 'Todas';
            
            // Limpa o localStorage
            localStorage.removeItem('expenses');
            localStorage.removeItem('goal');
            localStorage.removeItem('income');
            
            // Atualiza a interface
            saveAndRender();
            showToast('success', 'Todos os dados foram limpos com sucesso!');
        }
    }

    // Continua o código existente...
    // Eventos
    document.getElementById('reset-btn').addEventListener('click', resetData);